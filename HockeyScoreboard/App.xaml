<Application x:Class="HockeyScoreboard.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:HockeyScoreboard"
             StartupUri="MainWindow.xaml" ShutdownMode="OnMainWindowClose">
    <Application.Resources>
        <FontFamily x:Key="FontAwesome">/Fonts/fontawesome-webfont.ttf#FontAwesome</FontFamily>
        <Color x:Key="ColorBackgroundMain">#FF333333</Color>
        <Color x:Key="ColorBackgroundSecondary">#FF4D4F5F</Color>
        <Color x:Key="ColorBackgroundButton">#FF696C85</Color>
        <Color x:Key="ColorBorderBrush">Black</Color>
        <Color x:Key="ColorTextDefault">#FFF4F8FC</Color>
        <Color x:Key="ColorTextValues">#FFF1CD46</Color>
        <Color x:Key="ColorTextTime">#FFEE455D</Color>
        <Color x:Key="ColorTextPeriod">#FF74FF00</Color>
        <Color x:Key="ColorIndicatorSlotFree">#FF008000</Color>
        <Color x:Key="ColorIndicatorSlotOccupied">#FFFF0000</Color>

        <!--BitmapImage x:Key="IconSource" CreateOptions="IgnoreImageCache" CacheOption="OnLoad" UriSource="C:\Users\ojstr\Programming\Visual Studio\HockeyScoreboard\HockeyScoreboard\HockeyScoreboardIcon.ico"/-->

        <!-- THEME BASIC  #FF688CAF -->
        <Color x:Key="ThemeRedColor">#d14040</Color>
        <Color x:Key="ThemeColorInactive">#FF333333</Color>
        <Color x:Key="ThemeColorActive">#FF696C85</Color>
        <SolidColorBrush x:Key="ThemeBrushBackgroundButton" Color="{DynamicResource ColorBackgroundButton}" />
        <SolidColorBrush x:Key="ThemeBrushBackgroundSecondary" Color="{DynamicResource ColorBackgroundSecondary}" />
        <SolidColorBrush x:Key="ThemeBrushBackgroundMain" Color="{DynamicResource ColorBackgroundMain}" />
        <SolidColorBrush x:Key="ThemeBrushBorderBrush" Color="{DynamicResource ColorBorderBrush}" />
        <SolidColorBrush x:Key="ThemeBrushInactive" Color="{DynamicResource ThemeColorInactive}" />
        <SolidColorBrush x:Key="ThemeBrushActive" Color="{DynamicResource ThemeColorActive}" />
        <SolidColorBrush x:Key="ThemeRedBrush" Color="{DynamicResource ThemeRedColor}" />

        <SolidColorBrush x:Key="Theme_Brush_Bg" Color="White" />
        <SolidColorBrush x:Key="Theme_Brush_SilverBorder" Color="Silver" />


        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="{DynamicResource ColorBackgroundButton}"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="{DynamicResource ColorBorderBrush}"/>
        <SolidColorBrush x:Key="Button.Static.Foreground" Color="{DynamicResource ColorTextValues}"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF9A9CB0"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{DynamicResource ColorBorderBrush}"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF585A6F"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="{DynamicResource ColorBorderBrush}"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="{DynamicResource ColorBackgroundSecondary}"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="{DynamicResource ColorBorderBrush}"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{DynamicResource ColorBackgroundButton}"/>
        <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="CustomTabStyle" TargetType="{x:Type TabControl}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
